when@prod:    
    security:
        providers:
            custom_user_provider:
                entity:
                    class: App\Security\UserProvider
                    property: username
            database_users:
                entity: { class: App\Entity\User, property: username }
            chained_providers:
                chain:
                    providers: ['custom_user_provider', 'database_users']
        firewalls:
            dev:
                pattern: ^/(_(profiler|wdt)|css|images|js)/
                security: false
            homepage_pass_thru:
                security: false
                request_matcher: App\Security\HomepageMatcher
            secured:
                pattern: ^/
                provider: chained_providers
                custom_authenticator: EcPhp\CasBundle\Security\CasAuthenticator
                form_login:
                    check_path: cas_bundle_login
                    login_path: cas_bundle_login
                entry_point: EcPhp\CasBundle\Security\CasAuthenticator
        access_control:
            - { path: ^/my, roles: ROLE_CAS_AUTHENTICATED }
            - { path: ^/admin, roles: ROLE_ADMIN }
        role_hierarchy:
            ROLE_ADMIN: [ROLE_FACULTY,ROLE_STAFF,ROLE_STUDENT,ROLE_GSAPP,ROLE_UGAPP,ROLE_USER]
            ROLE_FACULTY: ROLE_USER
            ROLE_STAFF: ROLE_USER
            ROLE_STUDENT: ROLE_USER
            ROLE_GSAPP: ROLE_USER 
            ROLE_UGAPP: ROLE_USER
            ROLE_USER: ROLE_CAS_AUTHENTICATED

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon

when@dev:
    security:
        providers:
            database_users:
                entity: { class: App\Entity\User, property: username }
        firewalls:
            dev:
                pattern: ^/(_(profiler|wdt)|css|images|js)/
                security: false
            homepage_pass_thru:
                security: false
                request_matcher: App\Security\HomepageMatcher
            never_for_production:
                lazy: true
                provider: database_users
                custom_authenticator: App\Security\DevAuthenticator
        access_control:
            - { path: ^/my, roles: ROLE_USER }
            - { path: ^/admin, roles: ROLE_ADMIN }
        role_hierarchy:
            ROLE_ADMIN: [ROLE_FACULTY,ROLE_STAFF,ROLE_STUDENT,ROLE_GSAPP,ROLE_UGAPP,ROLE_USER]
            ROLE_FACULTY: ROLE_USER
            ROLE_STAFF: ROLE_USER
            ROLE_STUDENT: ROLE_USER
            ROLE_GSAPP: ROLE_USER 
            ROLE_UGAPP: ROLE_USER
