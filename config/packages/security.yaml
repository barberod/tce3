when@prod:    
    security:
        providers:
            prod_user_provider:
                entity:
                    class: App\Security\UserProvider
                    property: username
        firewalls:
            dev:
                pattern: ^/(_(profiler|wdt)|css|images|js)/
                security: false
            secured:
                pattern: ^/admin|^/my|^/secure
                provider: prod_user_provider
                custom_authenticator: EcPhp\CasBundle\Security\CasAuthenticator
                form_login:
                    check_path: cas_bundle_login
                    login_path: cas_bundle_login
                entry_point: EcPhp\CasBundle\Security\CasAuthenticator
            homepage_pass_thru:
                security: false
                request_matcher: App\Security\HomepageMatcher
        access_control:
            - { path: ^/secure/manager, request_matcher: App\Security\CasUserIsManagerMatcher }
            - { path: ^/secure/coordinator, request_matcher: App\Security\CasUserIsCoordinatorMatcher }
            - { path: ^/admin|^/my|^/secure, roles: ROLE_CAS_AUTHENTICATED }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon

when@dev:
    security:
        providers:
            dev_user_provider:
                entity:
                    class: App\Security\DevUserProvider
                    property: username
            database_users:
                entity: 
                    class: App\Entity\User 
                    property: username
            chained_providers:
                chain:
                    providers: ['dev_user_provider', 'database_users']
        firewalls:
            dev:
                pattern: ^/(_(profiler|wdt)|css|images|js)/
                security: false
            homepage_pass_thru:
                security: false
                request_matcher: App\Security\HomepageMatcher
            never_for_production:
                pattern: ^/admin|^/my|^/secure
                provider: chained_providers
                custom_authenticator: App\Security\DevAuthenticator
        access_control:
            - { path: ^/admin|^/my|^/secure, roles: IS_AUTHENTICATED_FULLY }
